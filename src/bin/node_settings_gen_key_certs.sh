#!/bin/sh

echo " "
echo "//-----------------------------//"
echo "Generate keys in src/bin/tls_data"
echo "//-----------------------------//"
echo " "

cd src/bin/tls_data

if [ "$1" = "re_gen_root" ]
then
    echo "initial files"
    echo 01 > ca_serial
    echo 01 > ca_crlnumber
    rm ca_index.txt ; touch ca_index.txt

    echo "Generating CA Root cert"
    openssl genpkey -algorithm Ed25519 -out ca_root.key
    openssl req -config ca_root.cnf -new -key ca_root.key -nodes -out ca_root.csr -extensions v3_ca
    openssl req -config ca_root.cnf -new -x509 -in ca_root.csr -key ca_root.key -out ca_root.pem -extensions v3_ca -days 999

    echo "Generating CA Intermediate cert"
    openssl genpkey -algorithm Ed25519 -out ca_intermediate.key
    openssl req -config ca_root.cnf -new -key ca_intermediate.key -nodes -out ca_intermediate.csr -extensions v3_intermediate_ca -subj "/CN=ABlock Intermediate CA"
    openssl ca -config ca_root.cnf -extensions v3_intermediate_ca -days 999 -notext -batch -in ca_intermediate.csr -out ca_intermediate.pem
    cat ca_intermediate.pem ca_root.pem > ca_intermediate.bundle.pem

    openssl verify -CAfile ca_root.pem ca_intermediate.pem
    openssl verify -CAfile ca_root.pem ca_intermediate.bundle.pem
fi

if [ "$1" = "re_gen_leaf_certs" -o "$1" = "re_gen_leaf_certs_and_keys" -o "$1" = "re_gen_root" ]
then
  rm ca_index.txt ; touch ca_index.txt
  port_v1=12500
  for n in  node101 miner101 miner102 user101 user102
  do
    port_v1=$(($port_v1+10))
    port_v2=$(($port_v1+1))
    port_v3=$(($port_v1+2))
    echo "Generating ... n is set to $n ($port_v1, $port_v2, $port_v3)"
    if [ "$1" = "re_gen_leaf_certs_and_keys" ]
    then
      echo "Generating ... key & csr is set to $n"
      openssl genpkey -algorithm Ed25519 -out $n.key
      openssl req -config node.cnf -new -key $n.key -nodes -out $n.csr -subj "/CN=$n.a-block.net" -addext "subjectAltName=DNS:$n.a-block.net,DNS:127.0.0.1.$port_v1.nodes.a-block.net,DNS:127.0.0.1.$port_v2.nodes.a-block.net,DNS:127.0.0.1.$port_v3.nodes.a-block.net"
    fi

    cp ca_root.cnf temp.cnf
    printf "\n[SAN]\nsubjectAltName=DNS:$n.a-block.net,DNS:127.0.0.1.$port_v1.nodes.a-block.net,DNS:127.0.0.1.$port_v2.nodes.a-block.net,DNS:127.0.0.1.$port_v3.nodes.a-block.net\nextendedKeyUsage = serverAuth, clientAuth, codeSigning, emailProtection\nbasicConstraints = CA:FALSE\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\n" >> temp.cnf

    openssl ca -config temp.cnf -extensions SAN -cert ca_intermediate.pem -keyfile ca_intermediate.key -days 999 -notext -batch -in $n.csr -out $n.pem
    cat $n.pem ca_intermediate.bundle.pem > $n.bundle.pem

    openssl verify -CAfile ca_intermediate.bundle.pem $n.pem
    openssl verify -CAfile ca_root.pem -untrusted $n.bundle.pem $n.pem
  done
fi

if [ "$1" = "re_gen_trusted_certs" ]
then
  for n in node compute1 compute2 compute3 storage1 storage2 storage3 miner1 miner2 miner3 miner4 miner5 miner6 miner7 miner8 miner9 miner10 user1 user2 user3
  do
    openssl genpkey -algorithm Ed25519 -out $n.key
    openssl req -config node.cnf -new -key $n.key -nodes -out $n.csr -subj "/CN=$n.a-block.net" -addext "subjectAltName = DNS:$n.a-block.net"
    openssl req -config node.cnf -new -x509 -in $n.csr -key $n.key -out $n.pem -addext "subjectAltName = DNS:$n.a-block.net" -days 999
  done
fi

echo " "
echo "//-----------------------------//"
echo "Generate JSON in src/bin/tls_data: REQUIRE jq executable"
echo "//-----------------------------//"
echo " "

rm tls_certificates.json
rm test_tls_certificates.rs
echo "{" >> tls_certificates.json
echo "    \"file_comment\": [" >> tls_certificates.json
echo "        \"/// !!! AUTOGENERATED: DO NOT EDIT !!!\"," >> tls_certificates.json
echo "        \"/// Generated with: src/bin/node_settings_gen_key_certs.sh\"" >> tls_certificates.json
echo "    ]," >> tls_certificates.json
echo "    \"tls_config\": {" >> tls_certificates.json
echo "        \"pem_certificates\": {" >> tls_certificates.json

echo "/// !!! AUTOGENERATED: DO NOT EDIT !!!" >> test_tls_certificates.rs
echo "/// Generated with: \`src/bin/node_settings_gen_key_certs.sh\`" >> test_tls_certificates.rs
echo "" >> test_tls_certificates.rs
echo "/// PEM certificates for node DNS names" >> test_tls_certificates.rs
echo "pub const TEST_PEM_CERTIFICATES: &[(&str, &str)] = &[" >> test_tls_certificates.rs

for n in ca_root compute1 compute2 compute3 storage1 storage2 storage3 miner1 miner2 miner3 miner4 miner5 miner6 miner7 miner8 miner9 miner10 user1 user2 user3
do
  echo "Generating test json and rs cert ... n is set to $n"
  printf "            \"$n.a-block.net\": %s,\n" "$(jq -Rs . <$n.pem)" >> tls_certificates.json
  printf "(\"$n.a-block.net\", %s),\n" "$(jq -Rs . <$n.pem)" >> test_tls_certificates.rs
done

printf "            \"node.a-block.net\": %s\n" "$(jq -Rs . <node.pem)" >> tls_certificates.json
echo "        }," >> tls_certificates.json
echo "        \"pem_pkcs8_private_keys\": {" >> tls_certificates.json

printf "(\"node.a-block.net\", %s),\n" "$(jq -Rs . <node.pem)" >> test_tls_certificates.rs
echo "];" >> test_tls_certificates.rs
echo "" >> test_tls_certificates.rs
echo "/// PKCS8 Keys for node DNS names" >> test_tls_certificates.rs
echo "pub const TEST_PKCS8_KEYS: &[(&str, &str)] = &[" >> test_tls_certificates.rs

for n in compute1 compute2 compute3 storage1 storage2 storage3 miner1 miner2 miner3 miner4 miner5 miner6 miner7 miner8 miner9 miner10 user1 user2 user3
do
  echo "Generating test json and rs keys ... n is set to $n"
  printf "            \"$n.a-block.net\": %s,\n" "$(jq -Rs . <$n.key)" >> tls_certificates.json
  printf "(\"$n.a-block.net\", %s),\n" "$(jq -Rs . <$n.key)" >> test_tls_certificates.rs
done

printf "            \"node.a-block.net\": %s\n" "$(jq -Rs . <node.key)" >> tls_certificates.json
echo "        }," >> tls_certificates.json
echo "        \"socket_name_mapping\": {" >> tls_certificates.json
echo "            \"127.0.0.1:12300\": \"compute1.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12301\": \"compute2.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12302\": \"compute3.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12330\": \"storage1.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12331\": \"storage2.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12332\": \"storage3.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12340\": \"miner1.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12341\": \"miner2.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12342\": \"miner3.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12343\": \"miner4.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12344\": \"miner5.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12345\": \"miner6.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12346\": \"miner7.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12347\": \"miner8.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12348\": \"miner9.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12349\": \"miner10.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12360\": \"user1.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12361\": \"user2.a-block.net\"," >> tls_certificates.json
echo "            \"127.0.0.1:12362\": \"user3.a-block.net\"" >> tls_certificates.json
echo "        }" >> tls_certificates.json
echo "    }" >> tls_certificates.json
echo "}" >> tls_certificates.json

printf "(\"node.a-block.net\", %s),\n" "$(jq -Rs . <node.key)" >> test_tls_certificates.rs
echo "];" >> test_tls_certificates.rs

echo "" >> test_tls_certificates.rs
echo "/// PEM certificates for node DNS names" >> test_tls_certificates.rs
echo "pub const TEST_PEM_CERTIFICATES_WITH_CA: &[(&str, &str)] = &[" >> test_tls_certificates.rs

for n in node101 miner101 miner102 user101 user102
do
  echo "Generating test rs cert ... n is set to $n"
  printf "(\"$n.a-block.net\", %s),\n" "$(jq -Rs . <$n.bundle.pem)" >> test_tls_certificates.rs
done

echo "];" >> test_tls_certificates.rs
echo "" >> test_tls_certificates.rs
echo "/// PKCS8 Keys for node DNS names" >> test_tls_certificates.rs
echo "pub const TEST_PKCS8_KEYS_WITH_CA: &[(&str, &str)] = &[" >> test_tls_certificates.rs

for n in node101 miner101 miner102 user101 user102
do
  echo "Generating test rs keys ... n is set to $n"
  printf "(\"$n.a-block.net\", %s),\n" "$(jq -Rs . <$n.key)" >> test_tls_certificates.rs
done

echo "];" >> test_tls_certificates.rs


mv tls_certificates.json ../tls_certificates.json
mv test_tls_certificates.rs ../../comms_handler/test_tls_certificates.rs
rm temp.cnf *.old *.attr [0-9A-F]*.pem
